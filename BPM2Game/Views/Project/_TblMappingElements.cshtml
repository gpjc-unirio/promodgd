@using System.IO.MemoryMappedFiles
@model IEnumerable<Bpm2GP.Model.DataBase.Models.DesignMapping>

@{
    var map = Model.FirstOrDefault();
}

<script type="text/javascript">
    $(document).ready(function() {
        $('#tblMapping').DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
        });

        $('[data-toggle="tooltip"]').tooltip();
    });

</script>

@if (map != null)
{
    //var groupProcessElements = map.AssociationConf.ElementsAssociated.GroupBy(g => g.ProcessElement.Name);

    <h3>Mapped From: @(map.AssociationConf.Name)</h3>
    if ((map.AssociationConf.Language != null) && (map.AssociationConf.Genre != null))
    {
        <small>(@("Language: [" + map.AssociationConf.Language.Name + "] and Genre: [" + map.AssociationConf.Genre.Name + "]"))</small>
        <br/>
    }
    <small>Creation Date: <strong>@map.CreationDate.ToShortDateString()</strong></small>
    <hr/>
    <h4>
        <i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="top" title="Elements mapped in association by elements existents in the model."></i>
        <strong>Mapping Score: @(Math.Round(map.ModelScore * 100, 5))%</strong>
    </h4>
    <hr/>
    <table class="table table-striped table-responsive table-bordered" id="tblMapping">
        <thead>
        <tr>
            <th>
                @Html.DisplayName("Model Element")
            </th>
            <th>
                @Html.DisplayName("Game Genre Element")
            </th>
            <th style="width: 80%">
                @Html.DisplayName("Mapped Element")
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var element in map.AssociationConf.ElementsAssociated.OrderBy(o => o.ProcessElement.Name).ThenBy(t => t.GameGenreElement.Name).ToList())
        {
            var point = map.GameMappingScores.FirstOrDefault(f => f.GameGenreElementId == element.GameGenreElement.Id &&
                                                                  f.ModelElementId == element.ProcessElement.Id);

            <tr>
                <td style="vertical-align: middle;">
                    <div data-toggle="tooltip" data-placement="top" title='@element.ProcessElement.Description'>
                        @element.ProcessElement.Name
                    </div>
                </td>

                <td style="vertical-align: middle;">
                    @if (element.Ruleses.Any(a => a.Type.Id == 4) || element.ProcessElement == null)
                    {
                        <i class="glyphicon glyphicon-book" data-toggle="tooltip" data-placement="top" title='Information could exist in the "Process Model Documentation"'> - </i>
                    }
                    <div data-toggle="tooltip" data-placement="top" title='@element.GameGenreElement.Description'>
                        @element.GameGenreElement.Name
                        <br/>
                        <small style="color: silver">
                            Mapped: @(point != null ? (Math.Round(point.MappedElements, 0) + "/" + Math.Round(point.ExpectedElements, 0)) : "0/0")
                        </small>
                    </div>
                    <div class="btn-group-xs" data-toggle="tooltip" data-placement="top" title='Include New Element'>
                        <a href="#" class="btn btn-default btn-xs">
                            <i class="glyphicon glyphicon-pawn"></i> Add New Element
                        </a>
                    </div>
                </td>
                <td style="vertical-align: middle;">
                    @{
                        var mappedElements = map.GameDesignMappingElements.Where(w => w.AssociateElement.Id == element.Id);
                    }
                    <ul class="list-group">

                        @foreach (var mappedElement in mappedElements)
                        {
                            <li class="list-group-item">
                                <i class="glyphicon glyphicon-knight" data-toggle="tooltip" data-placement="top" title="Game Element"></i> 
                                @if (!mappedElement.IsManual)
                                {
                                    <i class="glyphicon glyphicon-wrench" data-toggle="tooltip" data-placement="top" title="Information auto-generated"></i>
                                }
                                else
                                {
                                    <i class="glyphicon glyphicon-hand-up" data-toggle="tooltip" data-placement="top" title="Information generated manually"></i>
                                }
                                <a href="#" class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" title='Remove Element'>
                                    <i class="glyphicon glyphicon-trash"></i>
                                </a>
                                <br/>
                                <small>@mappedElement.Descricao</small>
                            </li>
                        }
                    </ul>
                </td>
            </tr>
        }
        </tbody>
        <tfoot>
            <tr style="vertical-align: middle;">
                <th>
                    Legend:
                </th>
                <td colspan="2">
                    <i class="glyphicon glyphicon-knight" data-toggle="tooltip" data-placement="top" title="Game Element"></i> = Game element<br/>
                    <i class="glyphicon glyphicon-wrench" data-toggle="tooltip" data-placement="top" title="Information auto-generated"></i> = Information created by process mapping<br />
                    <i class="glyphicon glyphicon-hand-up" data-toggle="tooltip" data-placement="top" title="Information auto-generated"></i> = Information created manually<br/>
                    <i class="glyphicon glyphicon-book" data-toggle="tooltip" data-placement="top" title='Information could exist in the "Process Model Documentation"'></i> = Information could exist in the "Process Model Documentation"<br/>
                    <i class="glyphicon glyphicon-pawn" data-toggle="tooltip" data-placement="top" title='Remove Element'></i> = Inclusion of a new element<br />
                    <i class="glyphicon glyphicon-trash" data-toggle="tooltip" data-placement="top" title='Remove Element'></i> = Remove selected element<br />
                </td>
            </tr>
        </tfoot>
    </table>

    if (map.DesignMappingErrors.Count > 0)
    {
        <div class="alert alert-danger">
            <h5><strong>Errors:</strong></h5>
            @foreach (var error in map.DesignMappingErrors)
            {
                <details>
                    <summary>@error.Id</summary>
                    <p class="text-justify">@error.Error.Message </p>
                    <a href="#" class="btn btn-success btn-xs"> Ignore</a>
                </details>
                <br />
            }
        </div>
    }
}
