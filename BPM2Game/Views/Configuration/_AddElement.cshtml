@using Bpm2GP.Model.DataBase.Models
@model Bpm2GP.Model.DataBase.Models.ModelingLanguageElement

@{ 
    var elements = (List<ModelingLanguageElement>)ViewData["Elements"];
    elements.Insert(0, new ModelingLanguageElement() { Name = ""});
    var elementsSelected = new SelectList(elements, "Id", "Name");
}

<script>
    $.validator.unobtrusive.parse(document);

    function postElementDone() {
        $("#dlgElements").modal("hide");
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

        $("#Name").val("");
        $("#Description").val("");
        $("#Metamodel").val("");
    }
</script>

<div id="dlgElements" class="modal fade" role="dialog">
    @using (Ajax.BeginForm("SaveElement", "Configuration", new AjaxOptions()
    {
        UpdateTargetId = "tblElements",
        HttpMethod = "post",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "postElementDone"
    }))
    {
        @Html.AntiForgeryToken()

        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">New Element</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.Hidden("IdLanguage", Model.Language.Id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Metamodel, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Metamodel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Metamodel, "", new { @class = "text-danger" })
                            </div>
                        </div>        
                        
                        <div class="form-group">
                            @Html.Label("Parent Element", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ParentElement, elementsSelected, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>                
                    </div>
                </div>
                <div class="modal-footer form-horizontal">
                    <button type="button" class="btn btn-primary" data-dismiss="modal"><i class="glyphicon glyphicon-remove-circle"></i> Cancel</button>
                    <button type="submit" class="btn btn-success"><i class="glyphicon glyphicon-floppy-save"></i> Save</button>
                </div>
            </div>
        </div>
    }
</div>

